{
	"nodes":[
		{"id":"9a59484385fdf4bb","type":"text","text":"**Window function** is a small, square neighborhood centered  on the pixel of interest. Out of window would return 0.","x":1440,"y":-663,"width":516,"height":93},
		{"id":"0aa85518e0792e21","type":"text","text":"**Intensity Function**: represents the grayscale values of pixels indicating the brightness","x":1440,"y":-543,"width":516,"height":83},
		{"id":"31f891c5e0f3f38a","type":"text","text":"Usually  **Gaussian** function to give **higher importance to pixels closer to the center**, making the detection *more robust to noise*","x":2056,"y":-663,"width":509,"height":92},
		{"id":"f42e9ec43f4d85e5","type":"text","text":"Results: it **quantifies the difference in intensities** between the *original window and the shifted window,* giving an indication of whether the region contains a corner based on how much the intensities change in response to the shift.\n\n|                                                | Flat      | Edge                                                                   | Corner                                                                                        |\n| ---------------------------------------------- | --------- | ---------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- |\n| Shift perpendicular<br>to the edge(<br>if any) | no change | Shifting perpendicular to the edge yields a large intensity change<br> | Large, obiviously                                                                             |\n| Shift parallelly                               | no change | While shifting along the edge yields little change                     | Still large, since it is a corner, it can't be parallel to all the edges                      |\n| Shift any other direction                      | no change | yields some intensity change                                           | A large intensity change, as both horizontal and vertical intensity gradients are significant |","x":1440,"y":-404,"width":840,"height":414},
		{"id":"dbc2f89f592e66c2","type":"text","text":"# Feature Detection and Matching","x":-960,"y":-222,"width":600,"height":62},
		{"id":"64958624d2e178e3","type":"text","text":"# Harris Corner Detection","x":-80,"y":-237,"width":440,"height":92},
		{"id":"240674517d10bfc8","type":"text","text":"### Rotation Invariance\nThis rotation invariance allows the Harris detector to consistently detect corners in images even if they are rotated\n- **Eigenvalues (shape)**: Represent the magnitude of intensity changes, which are unchanged by rotation.\n- **Eigenvectors (orientation)**: Represent the directions of intensity changes, which rotate with the image.\n- **Corner Response $R$**: Only depends on eigenvalues (not on orientation), so it remains the same regardless of image rotation.","x":1458,"y":960,"width":663,"height":340},
		{"id":"a4c0670386b10aa4","type":"text","text":"## Properties","x":718,"y":1270,"width":250,"height":60},
		{"id":"6bef96d30f6f4bbd","type":"text","text":"### Not Invariant to Image Scale\nWhen an image is scaled, **the gradients $I_x$ and $I_y$​ also change**. *In a smaller image, gradients tend to be weaker (smaller in magnitude) than in a larger image, where details are more pronounced*.\n- **Upscaling**: When the image is enlarged, new small details may become visible, and the detector might find additional corners that weren't detectable in the smaller image.\n- **Downscaling**: When the image is reduced in size, some corners might disappear because they become too small to be detected within the fixed window.","x":1458,"y":1880,"width":663,"height":360},
		{"id":"bddb9c1b6981ea80","type":"text","text":"Object types","x":718,"y":-931,"width":162,"height":50},
		{"id":"a29209de02ab5649","type":"text","text":"## The Corner Response R\n\n$R=det(M)−k⋅(trace(M))^2$, where: \n- $\\text{det}(M)=λ1​⋅λ2$​, which measures the **“volume” or overall strength of the intensity variation in all directions**.\n- $\\text{trace}(M) = \\lambda_1 + \\lambda_2$ ​, which gives the sum of the intensity variations, providing **a sense of the total strength of the gradient without distinguishing directions**.\n- $k$ is an empirical *constant* (usually between 0.04 and 0.06), which controls the *sensitivity of the corner response to edges versus corners*.\n#### Interpreting R\n- If $R$ is **large and positive,** it indicates that both eigenvalues $\\lambda_1$​ and $\\lambda_2$​ are large, meaning there’s significant intensity variation in both directions. This is characteristic of a **corner**.\n- If $R$ is negative, it indicates that one eigenvalue is large while the other is small, which is typical of an **edge**\n- If $R$ is close to zero or very small, it suggests that both eigenvalues are small, meaning there’s minimal intensity variation.","x":2480,"y":133,"width":840,"height":575},
		{"id":"9fa2d52e1979c3bb","type":"text","text":"# Scale Invariant Feature Transformation\n","x":-1960,"y":-237,"width":695,"height":97},
		{"id":"4343893b2cd67505","type":"text","text":"## 1. Scale-Space Extrema Detection\n\n>[!definition] \n>SIFT is a method that **identifies distinctive keypoints** in an image and generates **descriptors** for each keypoint. These **descriptors capture local information** around the keypoints in a way that remains **stable across transformations.**\n\n![[Pasted image 20241111011734.png|400]]\n1. **Create Gaussian Scale-Space**: Blur image multiple times with each octave with *increasing scale sigma $\\sigma$ values(images would be more blurred and flatten )* to create a pyramid of Gaussian-blurred images\n2. **Compute Difference of Gaussian (DOG)**: **Subtract consecutive** Gaussian-blurred images to form the DoG images, highlighting regions with **significant intensity changes**.\n3. **Downsample**: downsample the image and repeat the process for the next octave\n4. **Detect Keypoints Across Scales**: Identify keypoints by **finding local maxima/minima** in the **DoG** images across scales and space\n\n![[1731288125765.jpg|500]]","x":-3040,"y":-1560,"width":640,"height":1160},
		{"id":"d96276c2d51372d2","type":"text","text":"\"Flat\" no change in all directions","x":1120,"y":-833,"width":419,"height":67},
		{"id":"b1ebb080c3a3bdb6","type":"text","text":"\"Edge\": no change along the edge direction","x":1126,"y":-1070,"width":413,"height":99},
		{"id":"44156480d6f7f0c7","type":"text","text":"\"Corner\": significant change in all directions","x":1126,"y":-931,"width":417,"height":50},
		{"id":"789a0ff4e69f3ab2","type":"text","text":"## Intensity Shift Equation E(u, v)\n![[Pasted image 20241110222439.png]]\n\n$$\n\\begin{align}\nE(u,v) &= \\sum {w(x,y)(I(x,y)+uI_x+vI_y-I(x,y))^2} \\\\\n&= \\sum{w(x,y) (uI_x+vI_y)^2} \\\\\n&= \\sum{w(x,y) (u^2I_x^2 + 2uvI_xI_y + v^2I_y^2)} \\\\\n&= \\sum w(x,y) \\begin{bmatrix} u & v \\end{bmatrix} \\begin{bmatrix} I_x^2 & I_x I_y \\\\ I_x I_y & I_y^2 \\end{bmatrix} \\begin{bmatrix} u \\\\ v \\end{bmatrix} \\\\\n&= \\begin{bmatrix} u & v\\end{bmatrix} \\sum {w(x, y) \\begin{bmatrix} I_x^2 & I_x I_y \\\\ I_x I_y & I_y^2 \\end{bmatrix}} \\begin{bmatrix} u \\\\ v \\end{bmatrix} \\\\\n&= \\begin{bmatrix} u & v\\end{bmatrix} \\space M \\space \\begin{bmatrix} u \\\\ v \\end{bmatrix} \\\\\n\\end{align} \n$$\n$I_x$ and $I_y$ represent the intensity **gradients** in the x and y directions, respectively.\n\n","x":718,"y":-495,"width":482,"height":596},
		{"id":"6b207995bbf8f669","type":"text","text":"**Classification** via **eigenvalues of M 特征值:**\n\n![[Pasted image 20241110233646.png|400]]\n\n$\\lambda_1$​ and $\\lambda_2$ are not simply maximum gradient values but are the **eigenvalues of the matrix** $M$, **representing how intensity varies across the neighborhood in principal directions**:\n1. A **small, roughly circular cluster** (both eigenvalues are small) indicates a flat region.\n2. A **thin, elongated ellipse** (one large eigenvalue and one small eigenvalue) indicates an edge\n3. A **large, roughly circular ellipse** (both $\\lambda_1$​ and $\\lambda_2$​ are large) indicates a corner ","x":1440,"y":60,"width":483,"height":720},
		{"id":"0996b0e2f01e12a3","type":"text","text":"### Shift Invariance\nThe Harris detector is fully invariant to shifts in intensity (brightness changes) **because the gradients $I_x$​ and $I_y$​ are unaffected by adding a constant value**.\n### Insensitive to Intensity Scaling\nThe detector is **partially invariant** to intensity scaling. **Although $R$ changes with the scaling factor $a$, relative values of $R$ (corner strength) still allow consistent corner detection, often by adjusting or normalizing the threshold**.","x":1458,"y":1420,"width":663,"height":350},
		{"id":"f1ed8758f8352a91","type":"text","text":"## 2. Keypoint Localization\n\nRefine the keypoint locations by removing **low-contrast points** and **points along edges** to improve **stability**\n- **edge-like points are highly sensitive to small changes in viewpoint, scale, or illumination**, which makes them unreliable for matching\n![[1731289904851.jpg|400]]\n- **r** is a ratio to filter out unstable edge-like keypoints in SIFT\n\n\n","x":-3040,"y":-300,"width":640,"height":560},
		{"id":"e6be71228eda7612","type":"text","text":"## 4. Descriptor Generation\nGenerate a **feature vector (descriptor)** for each keypoint by encoding the local gradients around the keypoint, resulting in a highly distinctive descriptor for each keypoint.\n\nThe **descriptor length** is determined by:\n\n1. **Number of Cells**: There are 4x4 cells in the 16x16 pixel region, totaling **16 cells**.\n2. **Orientation Bins per Cell**: Each cell has a histogram with **8 bins**, representing **8 possible gradient orientations**.\n\nSo, the total length of the SIFT descriptor is:\n$$\n16 \\text{ cells} \\times 8 \\text{ bins per cell} = 128 \\text{ elements}\n$$\nResulting in a 128-dimensional feature vector for each keypoint","x":-3040,"y":1100,"width":640,"height":480},
		{"id":"f8d70e5e63555080","type":"text","text":"## 3. Orientation Assignment\nAn **orientation histogram** is formed from the gradient orientations of sample points **within a region around the keypoint**. \n- Each keypoint descriptor is in shape of the shrunk region around it, for example: 4 \\* 4, and each orientation histogram for each small block has 8 directions (8bins), so overall length = 4 \\* 4 \\* 8\n- The orientation histogram has **36 bins (directions)** covering the 360 degree range of orientations.\n\t- Each bin would be a value in each descriptor \n![[wk04-Feature Detection and Matching-20241009094013046.webp]]\n","x":-3050,"y":340,"width":670,"height":700},
		{"id":"7a852d3d5a90a984","type":"text","text":"- The **peak of this histogram** represents the **dominant orientation** of the keypoint.\n\n>[!important] Why it is invariant to rotation?\n>Once the local orientation and scale of a keypoint have been estimated, a scaled and oriented patch around the detected point can be extracted and used to form a feature descriptor","x":-3900,"y":550,"width":659,"height":281}
	],
	"edges":[
		{"id":"496ae9ff81cb4b04","fromNode":"dbc2f89f592e66c2","fromSide":"right","toNode":"64958624d2e178e3","toSide":"left"},
		{"id":"3b8b5a39ac4f94c0","fromNode":"64958624d2e178e3","fromSide":"right","toNode":"bddb9c1b6981ea80","toSide":"left"},
		{"id":"75199af89c298133","fromNode":"bddb9c1b6981ea80","fromSide":"right","toNode":"b1ebb080c3a3bdb6","toSide":"left"},
		{"id":"13bfaa0c6b367244","fromNode":"bddb9c1b6981ea80","fromSide":"right","toNode":"44156480d6f7f0c7","toSide":"left"},
		{"id":"72a91a57789e05b9","fromNode":"64958624d2e178e3","fromSide":"right","toNode":"789a0ff4e69f3ab2","toSide":"left"},
		{"id":"7e531e36de75ceb9","fromNode":"789a0ff4e69f3ab2","fromSide":"right","toNode":"9a59484385fdf4bb","toSide":"left"},
		{"id":"f5b8d7ffae400f93","fromNode":"9a59484385fdf4bb","fromSide":"right","toNode":"31f891c5e0f3f38a","toSide":"left"},
		{"id":"a1301f5168c92c2f","fromNode":"789a0ff4e69f3ab2","fromSide":"right","toNode":"0aa85518e0792e21","toSide":"left"},
		{"id":"d1d4545dd6aad2cd","fromNode":"789a0ff4e69f3ab2","fromSide":"right","toNode":"f42e9ec43f4d85e5","toSide":"left"},
		{"id":"37f70bf15aa9ae86","fromNode":"789a0ff4e69f3ab2","fromSide":"right","toNode":"6b207995bbf8f669","toSide":"left"},
		{"id":"86e42622a757a33f","fromNode":"6b207995bbf8f669","fromSide":"right","toNode":"a29209de02ab5649","toSide":"left"},
		{"id":"f9db799e267b7458","fromNode":"a29209de02ab5649","fromSide":"bottom","toNode":"240674517d10bfc8","toSide":"right"},
		{"id":"1487c7f58d0ec503","fromNode":"a4c0670386b10aa4","fromSide":"right","toNode":"240674517d10bfc8","toSide":"left"},
		{"id":"43ed19ebf1cd7b45","fromNode":"a29209de02ab5649","fromSide":"bottom","toNode":"0996b0e2f01e12a3","toSide":"right"},
		{"id":"12c58a443a7ada03","fromNode":"a4c0670386b10aa4","fromSide":"right","toNode":"0996b0e2f01e12a3","toSide":"left"},
		{"id":"41312828f70f0f90","fromNode":"a4c0670386b10aa4","fromSide":"right","toNode":"6bef96d30f6f4bbd","toSide":"left"},
		{"id":"bd47fb46b18470af","fromNode":"64958624d2e178e3","fromSide":"right","toNode":"a4c0670386b10aa4","toSide":"left"},
		{"id":"a24744767b575a2d","fromNode":"dbc2f89f592e66c2","fromSide":"left","toNode":"9fa2d52e1979c3bb","toSide":"right"},
		{"id":"0dc34e2811fc8e74","fromNode":"bddb9c1b6981ea80","fromSide":"right","toNode":"d96276c2d51372d2","toSide":"left"},
		{"id":"509bb813856ad3ee","fromNode":"9fa2d52e1979c3bb","fromSide":"left","toNode":"f1ed8758f8352a91","toSide":"right"},
		{"id":"58836e76bf99e245","fromNode":"9fa2d52e1979c3bb","fromSide":"left","toNode":"f1ed8758f8352a91","toSide":"right"},
		{"id":"058252cf2c6c1416","fromNode":"9fa2d52e1979c3bb","fromSide":"left","toNode":"4343893b2cd67505","toSide":"right"},
		{"id":"1aba1c42bd93c728","fromNode":"9fa2d52e1979c3bb","fromSide":"left","toNode":"f8d70e5e63555080","toSide":"right"},
		{"id":"6d1341819173530b","fromNode":"9fa2d52e1979c3bb","fromSide":"left","toNode":"e6be71228eda7612","toSide":"right"},
		{"id":"950e889cca0e3a7f","fromNode":"f8d70e5e63555080","fromSide":"left","toNode":"7a852d3d5a90a984","toSide":"right"}
	]
}